- pipeline: "production"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: composer install"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/php"
    docker_image_tag: "7.2-stretch"
    execute_commands:
    - "composer install"
    setup_commands:
    - "apt-get update && apt-get install -y git zip"
    - "curl -L https://phar.phpunit.de/phpunit.phar -o /usr/local/bin/phpunit"
    - "chmod +x /usr/local/bin/phpunit"
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
    - "# php ext gd"
    - "apt-get install -y libfreetype6-dev"
    - "apt-get install -y libjpeg62-turbo-dev"
    - "apt-get install -y libpng-dev"
    - "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/"
    - "docker-php-ext-install gd"
    - "# php ext zip"
    - "apt-get install -y zip"
    - "apt-get install -y unzip"
    - "apt-get install -y zlib1g-dev"
    - "docker-php-ext-install zip"
    - "# php ext pdo_mysql"
    - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
    - "docker-php-ext-install pdo_mysql"
    - ""
    - ""
    - "# php ext intl"
    - "apt-get install -y libicu-dev"
    - "docker-php-ext-install intl"
    - ""
    - ""
    - "# php ext redis"
    - "pecl install redis"
    - "docker-php-ext-enable redis"
    - ""
    - "# php ext sockets"
    - "docker-php-ext-configure sockets --enable-sockets"
    - "docker-php-ext-install sockets"
    - ""
    - ""
    mount_filesystem_path: "/buddy/aurora"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Semantic versioning"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "18.04"
    execute_commands:
    - "((patch=patch+1))"
    - ""
    mount_filesystem_path: "/buddy/aurora"
    shell: "BASH"
    trigger_condition: "ON_CHANGE"
  - action: "Prepare build"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "latest_version=$major\".\"$minor\".\"$patch"
    - "release=$major\".\"$minor\".\"$patch"
    - ""
    - "npm install"
    - "bower --allow-root install"
    - "grunt replace:aurora_version --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - "grunt clean:assets"
    - "grunt copy:fa_webfonts"
    - ""
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    - ""
    - "# install sass"
    - "apt-get update"
    - "apt-get install -y ruby-sass"
    - ""
    - "npm  install -g bower  --allow-root"
    - ""
    mount_filesystem_path: "/buddy/aurora"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build Sass files"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt au_sass"
    - "grunt au_css --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    - "# install sass"
    - "apt-get update"
    - "apt-get install -y ruby-sass"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "sass/au"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Minify  CSS"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt au_css --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "css/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Build js_libs"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt au_libs --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "js_libs/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Build js"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt au_js --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "js/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "SASS Ecom"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt sass:ecom_css"
    - "grunt ecom_css --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    - "# install sass"
    - "apt-get update"
    - "apt-get install -y ruby-sass"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "sass/EcomB2B"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "CSS Pweb"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt ecom_css --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "EcomB2B/css/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "JS Pweb libs and headers"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt ecom_libs_headers  --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "EcomB2B/js/libs/"
    - "EcomB2B/js/au_header/"
    - "EcomB2B/js/au_forms/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "JS logged in ordering"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt ecom_desktop_logged_in  --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "EcomB2B/js/aurora/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "JS Images"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt ecom_image_gallery --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "EcomB2B/js/images/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "JS basket/checkout"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt ecom_basket_checkout  --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "EcomB2B/js/basket_checkout/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "JS mobile logged in ordering"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/node"
    docker_image_tag: "6"
    execute_commands:
    - "grunt ecom_mobile_in --au_version_major=$major --au_version_minor=$minor  --au_version_patch=$patch"
    - ""
    setup_commands:
    - "npm install -g grunt-cli"
    mount_filesystem_path: "/buddy/aurora"
    trigger_condition_paths:
    - "EcomB2B/js/aurora_mobile/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: chgrp -R www-data *"
    type: "BUILD"
    working_directory: "/buddy/aurora"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "18.04"
    execute_commands:
    - "chgrp -R www-data *"
    - "chown -R inikoo *"
    - "chmod -R 644 templates/*.tpl"
    - "chmod -R 644 *.php"
    - "chmod -R 644 *.js"
    - "chmod -R 644 js/*.js"
    - "chmod -R 644 js_libs/*.js"
    - ""
    - ""
    setup_commands:
    - "adduser --disabled-password --gecos \"\" inikoo"
    mount_filesystem_path: "/buddy/aurora"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Rsync to test"
    type: "RSYNC"
    local_path: "/"
    remote_path: "/home/inikoo/au/"
    login: "inikoo"
    host: "bk3.inikoo.com"
    port: "22"
    env_key: "secure!tDG7E6fP4npBFWf9fwphtA=="
    authentication_mode: "ENV_KEY"
    archive: true
    compress: true
    deployment_excludes:
    - "/.git/"
    - "/fork/"
    - "/tests/"
    - "/app_files/"
    trigger_condition: "ALWAYS"
  - action: "Upload production"
    type: "RSYNC"
    local_path: "/"
    remote_path: "/home/inikoo/au/"
    login: "inikoo"
    host: "bk.inikoo.com"
    port: "22"
    env_key: "secure!tDG7E6fP4npBFWf9fwphtA=="
    authentication_mode: "ENV_KEY"
    arguments: "--rsync-path=\"sudo rsync\""
    archive: true
    delete_extra_files: true
    compress: true
    deployment_excludes:
    - "/.git/"
    - "/tests/"
    - "/app_files/"
    - "/server_files/"
    - "/keyring/"
    - "/EcomB2B/server_files/"
    trigger_condition: "ALWAYS"
  - action: "Send notification to Inikoo Ltd"
    type: "SENTRY"
    environment: "$BUDDY_PIPELINE_NAME"
    organization_slug: "inikoo-ltd"
    organization_name: "Inikoo Ltd"
    version: "$release"
    release_url: "$BUDDY_EXECUTION_URL"
    deploy_url: "$BUDDY_EXECUTION_URL"
    repository: "$BUDDY_REPO_SLUG"
    projects:
    - "au"
    - "fork"
    - "web"
    - "webjs"
    - "aujs"
    - "api"
    trigger_condition: "ON_CHANGE"
    integration_id: 66154
  - action: "AU Post-deployment action"
    type: "SSH_COMMAND"
    working_directory: "/home/inikoo/"
    login: "${ssh_username}"
    host: "bk.inikoo.com"
    port: "22"
    env_key: "secure!tDG7E6fP4npBFWf9fwphtA=="
    authentication_mode: "ENV_KEY"
    commands:
    - "./post_au_deploy.sh"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Send notification to Aurora"
    type: "NEW_RELIC"
    description: "$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID $release"
    changelog: "Revision:\r\n$BUDDY_EXECUTION_REVISION\r\n$BUDDY_EXECUTION_REVISION_MESSAGE"
    application_id: "18675471"
    region: "EU"
    device_name: "Aurora"
    trigger_condition: "ALWAYS"
    integration_id: 66218
  - action: "Send notification to inikoo channel"
    type: "SLACK"
    content: "[#$BUDDY_EXECUTION_ID] New version deployed v$release $BUDDY_EXECUTION_REVISION_MESSAGE $BUDDY_EXECUTION_COMMENT"
    channel: "CJCN1N0SE"
    channel_name: "aurora"
    trigger_condition: "ALWAYS"
    integration_id: 66199
  variables:
  - key: "ssh_username"
    value: "inikoo"
    id: 228519
