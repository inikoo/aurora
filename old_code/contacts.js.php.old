<?
include_once('../common.php');
?>


YAHOO.namespace ("contacts"); 


YAHOO.util.Event.addListener(window, "load", function() {
    YAHOO.contacts.XHR_JSON = new function() {
	    this.contactLink=  function(el, oRecord, oColumn, oData) {
		var url="contact.php?id="+oRecord.getData("id");
		el.innerHTML = oData.link(url);
	    }

	    this.companyLink=  function(el, oRecord, oColumn, oData) {


		if(oData!=null){
		var url="contact.php?id="+oRecord.getData("company_id");
		el.innerHTML = oData.link(url);
		}else
		    	el.innerHTML = '';
	    }

	     this.contactTipo=  function(el, oRecord, oColumn, oData) {
		 if(oData==2)
		     el.innerHTML = '<img src="art/icons/user.png" alt="<?_('Person')?>"/>';
		 if(oData==3)
		     el.innerHTML = '<img src="art/icons/user_female.png" alt="<?_('Person')?>"/>';
		 else if(oData==1)
		     el.innerHTML = '<img src="art/icons/building.png" alt="<?_('Bussiness')?>"/>';
	    }


	     //START OF THE TABLE=========================================================================================================================

		var tableid=0; // Change if you have more the 1 table
	    var tableDivEL="table"+tableid;



	    var ContactsColumnDefs = [
				      {key:"tipo", label:"", width:16,sortable:true,formatter:this.contactTipo,className:"aleft",sortOptions:{defaultDir:YAHOO.widget.DataTable.CLASS_ASC}},
				      {key:"name", label:"<?=_('Name')?>", width:200,sortable:true,formatter:this.contactLink,className:"aleft",sortOptions:{defaultDir:YAHOO.widget.DataTable.CLASS_ASC}},
				      //   {key:"company", label:"<?=_('Company')?>",width:80, sortable:true,formatter:this.companyLink,className:"aleft",sortOptions:{defaultDir:YAHOO.widget.DataTable.CLASS_ASC}},
				      //{key:"email", label:"<?=_('Email')?>", sortable:true,className:"aleft",sortOptions:{defaultDir:YAHOO.widget.DataTable.CLASS_ASC}},
				      //{key:"tel", label:"<?=_('Telephone')?>", sortable:true,className:"aleft",sortOptions:{defaultDir:YAHOO.widget.DataTable.CLASS_ASC}}

				      
				      //					 {key:"families", label:"<?=_('Contacts')?>", sortable:true,className:"aright",sortOptions:{defaultDir:YAHOO.widget.DataTable.CLASS_DESC}},
				      //{key:"active", label:"<?=_('Contacts')?>", sortable:true,className:"aright",sortOptions:{defaultDir:YAHOO.widget.DataTable.CLASS_DESC}}
				      

					 ];

	    this.ContactsDataSource = new YAHOO.util.DataSource("ar_contacts.php?tipo=contacts&tid=0");
	    this.ContactsDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
	    this.ContactsDataSource.connXhrMode = "queueRequests";
	    this.ContactsDataSource.responseSchema = {
		resultsList: "resultset.data", 
		totalRecords: 'resultset.total_records',
		fields: [
			 "id","name","email","tipo","company","company_id","tel"
			 //,{key:"families",parser:YAHOO.util.DataSource.parseNumber},
			 //	    {key:"active",parser:YAHOO.util.DataSource.parseNumber}
			 ]};
	    //__You shouls not change anything from here

	    this.ContactsDataSource.doBeforeCallback = mydoBeforeCallback;



	    this.ContactsDataTable = new YAHOO.widget.DataTable(tableDivEL, ContactsColumnDefs,
								   this.ContactsDataSource, {
								       renderLoopSize: 50
								   }
								   
								   );
	 
	    this.ContactsDataTable.paginatorMenu = new YAHOO.widget.Menu('paginatornewmenu'+tableid,  {context:['paginatormenuselector'+tableid,"tr", "br"]  });
	    this.ContactsDataTable.paginatorMenu.addItems([{ text: "25", onclick:{fn:changeRecordsperPage,obj:25,scope:this.ContactsDataTable}  } ]);
	    this.ContactsDataTable.paginatorMenu.addItems([{ text: "50", onclick:{fn:changeRecordsperPage,obj:50,scope:this.ContactsDataTable}  } ]);
	    this.ContactsDataTable.paginatorMenu.addItems([{ text: "100", onclick:{fn:changeRecordsperPage,obj:100,scope:this.ContactsDataTable}  } ]);
	    this.ContactsDataTable.paginatorMenu.addItems([{ text: "250", onclick:{fn:changeRecordsperPage,obj:250,scope:this.ContactsDataTable}  } ]);
	    this.ContactsDataTable.paginatorMenu.addItems([{ text: "500", onclick:{fn:changeRecordsperPage,obj:500,scope:this.ContactsDataTable}  } ]);
	    this.ContactsDataTable.paginatorMenu.addItems([{ text: "all", onclick:{fn:changeRecordsperPage,obj:'all',scope:this.ContactsDataTable}  } ]);
	    YAHOO.util.Event.addListener('paginatormenuselector'+tableid, "click", this.ContactsDataTable.paginatorMenu.show, null, this.ContactsDataTable.paginatorMenu);
	    this.ContactsDataTable.paginatorMenu.render(document.body);

	    



	    this.ContactsDataTable.filterMenu = new YAHOO.widget.Menu('filternewmenu0',  {context:['filterselector0',"tr", "br"]  });
	    this.ContactsDataTable.filterMenu.addItems([{ text: "<?=_('Name')?>", onclick:{fn:changeFilter,obj:{col:'name',text:"<?=_('Customer name')?>"},scope:this.ContactsDataTable}  } ]);
	    this.ContactsDataTable.filterMenu.addItems([{ text: "<?=_('Post Code')?>", onclick:{fn:changeFilter,obj:{col:'postcode',text:"<?=_('Post Code')?>"},scope:this.ContactsDataTable}  } ]);
	    YAHOO.util.Event.addListener('filterselector0', "click", this.ContactsDataTable.filterMenu.show, null, this.ContactsDataTable.filterMenu);
	    this.ContactsDataTable.filterMenu.render(document.body);
	    
	    this.ContactsDataTable.myreload=reload;
	    this.ContactsDataTable.sortColumn = mysort;
	    
	    this.ContactsDataTable.id=tableid;
	    this.ContactsDataTable.editmode=false;

	    this.ContactsDataTable.subscribe("initEvent", dataReturn); 
	    YAHOO.util.Event.addListener('paginator_next0', "click", nextpage, this.ContactsDataTable); 
	    YAHOO.util.Event.addListener('paginator_prev0', "click", prevpage, this.ContactsDataTable); 
	    YAHOO.util.Event.addListener('hidder0', "click", showtable, this.ContactsDataTable); 
	    YAHOO.util.Event.addListener('resetfilter0', "click", resetfilter, this.ContactsDataTable); 


	    
	};
    });




function init(){

    var Dom = YAHOO.util.Dom;
    var Event = YAHOO.util.Event; 
    function mygetTerms(query) {
	var Dom = YAHOO.util.Dom
	var table=YAHOO.contacts.XHR_JSON.ContactsDataTable;
	var data=table.getDataSource();
	var newrequest="&sf=0&f_field="+Dom.get('f_field0').value+"&f_value="+Dom.get('f_input0').value;

	//	alert(newrequest);
	data.sendRequest(newrequest,{success:table.onDataReturnInitializeTable, scope:table});
    };
    var oACDS = new YAHOO.widget.DS_JSFunction(mygetTerms);
    oACDS.queryMatchContains = true;
    var oAutoComp = new YAHOO.widget.AutoComplete("f_input0","filtercontainer0", oACDS);
    oAutoComp.minQueryLength = 0; 
    




    var handleSubmit = function() {
	this.submit();
    };
    var handleCancel = function() {
	this.cancel();
    };
    var handleSuccess = function(o) {
    };
    var handleFailure = function(o) {
	alert("Submission failed: " + o.status);
    };


  var expandTab  = function() {
      	Dom.get('addcontactpreview').style.display='none';
 	Dom.get('tab_container').style.width='100%';
    };

   var contractTab  = function() {
       Dom.get('tab_container').style.width='420px';
       Dom.get('addcontactpreview').style.display='block';
    };



  //   var addContactTabs = new YAHOO.widget.TabView("tab_container"); 
//     var companyTab=addContactTabs.getTab(0);
//     var addressTab=addContactTabs.getTab(1);
//     var telTab=addContactTabs.getTab(2);
//     var emailTab=addContactTabs.getTab(3);
//     var notesTab=addContactTabs.getTab(5);
//     var pictureTab=addContactTabs.getTab(5);
    
    
//     companyTab.addListener('click', contractTab); 
//     telTab.addListener('click', contractTab); 
//     emailTab.addListener('click', contractTab); 

//     addressTab.addListener('click', expandTab); 
//     notesTab.addListener('click', expandTab); 
//     pictureTab.addListener('click', expandTab); 



    YAHOO.contacts.dialog1 = new YAHOO.widget.Panel("add_contact_dialog", 
						  { 
							  width:"800px",
							  fixedcenter : true,
							  visible : false, 
							  constraintoviewport : true,
							  hideaftersubmit  :false,
							  close:false
							  //							  buttons : [ { text:"Submit", handler:handleSubmit, isDefault:true },{ text:"Cancel", handler:handleCancel } ]
						  } );

    YAHOO.contacts.dialog1.render();
    //YAHOO.contacts.dialog1.show();
	
    var showdialog =function(){
	YAHOO.contacts.dialog1.show();
    };

 var closedialog =function(){

     Dom.setStyle(Dom.getElementsByClassName('newitem', 'div'),'display','none');
     Dom.setStyle(Dom.getElementsByClassName('newLi', 'li'),'display','none');
     Dom.get('addtocontact').style.visibility='hidden';
     Dom.setStyle(['typeofcontact'],'display','block');



     YAHOO.contacts.dialog1.hide()
    };

 var newcontactpage =function(){
   document.location="new_contact.php";
   //   window.locaton.ref="new_contact.php";
 }
 //    var AddNewContactButton= new YAHOO.widget.Button("add_contact_button");
 Event.addListener( "add_contact" ,"click",newcontactpage);
    
    //var CancelNewContactButton= new YAHOO.widget.Button("cancel_newcontact");
    //CancelNewContactButton.addListener( "click",closedialog);
    


    

    var is_company=false;
    var has_contact=false;

    var addItem = function(e,tag){
	

	Dom.setStyle(Dom.getElementsByClassName('newitem', 'div'),'display','none');
	Dom.get('new'+tag).style.display='block';
	
	
	Dom.get('cancel_'+tag).style.display='';
	if(tag=='address'){
	    Dom.get('newcontact_data').style.display='none';
	    Dom.get('mapframe').style.display='';
	    var country_select=Dom.get('country');
	    var country=(country_select.options[country_select.options.selectedIndex].text);    
	    Dom.get('mapframe').src="http://localhost/kaktus/map.php?z=5&q="+country;
	}else{
	    Dom.get('newcontact_data').style.display='block';
	    Dom.get('mapframe').style.display='none';
	    
	    if(tag=='tel'){
		Dom.get('skip_tel').style.display='none';
		submitTelButton.removeListener("click");
		submitTelButton.addListener("click",submitTel,false);
	    }else if(tag=='email'){
		Dom.get('skip_email').style.display='none';
	    }

	}


    }

    var submitItem = function(e,tag){
	 
    }


var submitwww = function(){
 var www=Dom.get('www').value;

    if(www=='' &&  www=='http://' ){
	var msg='<?=_('Please write the web page address')?>.';
	alert(msg);
	return;
    }
    if(!isValidURL(www)){
	var msg='<?=_('Invalid web page address')?>.';
	alert(msg);
	return;
	    }
       
     
      var request='ar_contacts.php?tipo=newwww&name='+Dom.get('wwwname').value+"&www="+www;

	 YAHOO.util.Connect.asyncRequest('POST',request,{
		 success: function (o) {
		     
		     var r =  YAHOO.lang.JSON.parse(o.responseText);

		     

		     
		     newcontact=document.createElement('li');
		     newcontact.innerHTML=r.value;
		     newcontact.setAttribute("class", "newLi");
		     oClones.appendChild(newcontact);
		     oEweContextMenu.cfg.setProperty("trigger", oClones.childNodes);

		     



		     Dom.get('newwww').style.display='none';	     
		 },
		     failure: function(o) {alert("error")},
		     scope: this 
		     });
    }



var submitEmail = function(e,skip){
    var email=Dom.get('email').value;

    if(email==''){
	var msg='<?=_('Please write the email address')?>.';
	alert(msg);
	return;
    }
    if(!isValidEmail(email)){
	var msg='<?=_('Invalid email')?>.';
	alert(msg);
	return;
	    }
       
	var request='ar_contacts.php?tipo=newemail&temail='+Dom.get('tipoemail').value+"&name="+Dom.get('emailcontact').value+"&email="+email;

	 YAHOO.util.Connect.asyncRequest('POST',request,{
		 success: function (o) {
		     

		     var r =  YAHOO.lang.JSON.parse(o.responseText);



		     newcontact=document.createElement('li');
		     newcontact.innerHTML=r.value;
		     newcontact.setAttribute("class", "newLi");
		     oClones.insertBefore(newcontact,Dom.get('show_www'));
		     oEweContextMenu.cfg.setProperty("trigger", oClones.childNodes);




		     Dom.get('newemail').style.display='none';
		     
		     
		     
		     
		 },
		     failure: function(o) {alert("error")},
		     scope: this 
		     });
    }

 var submitTel = function(e,skip){
     var number= Dom.get('number').value;
     var code= Dom.get('code').value;
     var ext= Dom.get('ext').value;

     if(number==''){
	 var msg='<?=_('Please write the telephone number')?>.';
	 alert(msg);
	 return;
     }
     if(!isValidNumber(number,false)  || !isValidNumber(number,true) ||  !isValidNumber(number,true)   ){
	 var msg='<?=_('Invalid number')?>.';
	 alert(msg);
	 return;
     }
      var request='ar_contacts.php?tipo=newtel&ttel='+Dom.get('tipo_tel').value+"&code="+code+"&number="+number+"&ext="+ext;

	 YAHOO.util.Connect.asyncRequest('POST',request,{
		 success: function (o) {

		     var r =  YAHOO.lang.JSON.parse(o.responseText);
		    
		     newcontact=document.createElement('li');
		     newcontact.innerHTML=r.value;
		     newcontact.setAttribute("class", "newLi");
		     oClones.insertBefore(newcontact,Dom.get('show_email'));
		     oEweContextMenu.cfg.setProperty("trigger", oClones.childNodes);


		     Dom.get('newtel').style.display='none';	

		     
		     if(skip){
			 skipEmailButton= new YAHOO.widget.Button("skip_email");
			 skipEmailButton.addListener("click",skipItem,'email' ); 
			 
			 Dom.get('cancel_email').style.display='none';
			 
			 Dom.get('newemail').style.display='block';	
		     }


     
		 },
		     failure: function(o) {alert("error")},
		     scope: this 
		     });
    }


 var submitAddress = function(e,skip){
     
     var a1=Dom.get('a1').value;
     var a2=Dom.get('a2').value;
     var a3=Dom.get('a3').value;

     if(a1=='' &&  a2=='' &&  a3=='')
	 {
	     var msg='<?=_('Please write down the building or street')?>.';
	     alert(msg);
	     return;
	 }
      var city=Dom.get('town').value;
     var state=Dom.get('state').value;
      if(city=='' && state=='' )
	 {
	     var msg='<?=_('Please write down the city or region')?>.';
	     alert(msg);
	     return;
	 }
     
     
     var country_select=Dom.get('country');
     var country=(country_select.options[country_select.options.selectedIndex].text);    
      var request='ar_contacts.php?tipo=newaddress&add_tipo='+Dom.get('tipo_address').value+'&a1='+Dom.get('a1').value+"&a2="+Dom.get('a2').value+"&a3="+Dom.get('a3').value+"&town="+Dom.get('town').value+"&postcode="+Dom.get('postcode').value+"&state="+Dom.get('state').value+"&country_id="+Dom.get('country').value+"&country="+country ;

	 YAHOO.util.Connect.asyncRequest('POST',request,{
		 success: function (o) {

		     var r =  YAHOO.lang.JSON.parse(o.responseText);

		     newcontact=document.createElement('li');
		     newcontact.innerHTML=r.value;
		      newcontact.setAttribute("class", "newLi");
		     oClones.insertBefore(newcontact,Dom.get('show_tel'));
		     
		     oEweContextMenu.cfg.setProperty("trigger", oClones.childNodes);






		     Dom.get('newaddress').style.display='none';
		     Dom.get('mapframe').style.display='none';
		     Dom.get('newcontact_data').style.display='block';

		     if(skip){
			 var skipTelButton= new YAHOO.widget.Button("skip_tel");
			 skipTelButton.addListener("click",skipItem,'tel' ); 
			
			 // Correct the telephone options
			 
			 

			 Dom.get('newtel').style.display='block';	
		     }

		     
				     
		 },
		     failure: function(o) {alert("error")},
		     scope: this 
		     });
    }


     var submitContact = function(){


	 var lastname=Dom.get('lastname').value;
	 if(lastname==''){
	     var msg='<?=_('Please write down first name')?>.';
	     alert(msg);
	     return;
	 }



	 Dom.get('typeofcontact').style.display='none';
	 Dom.get('addtocontact').style.visibility='visible';
	 var request='ar_contacts.php?tipo=newcontact&in_company='+(is_company?1:0)+'&prefix='+Dom.get('prefix').value+"&firstname="+Dom.get('firstname').value+"&lastname="+lastname+"&suffix="+Dom.get('suffix').value;
	 
	 YAHOO.util.Connect.asyncRequest('POST',request,{


		 success: function (o) {

		     var r =  YAHOO.lang.JSON.parse(o.responseText);
		     newcontact=document.createElement('li');
		     newcontact.innerHTML=r.value;
		     newcontact.setAttribute("class", "newLi");
		     oClones.insertBefore(newcontact,Dom.get('show_address'));
		     oEweContextMenu.cfg.setProperty("trigger", oClones.childNodes);

		     if(is_company){



			 has_contact=true;
			 
			 Dom.setStyle(['newcontact','newcontact_data','mapframe','cancel_address'],'display','none')

			 Dom.get('mapframe').style.display='';
			 var country_select=Dom.get('country');
			 var country=(country_select.options[country_select.options.selectedIndex].text);    
			 Dom.get('mapframe').src="http://localhost/kaktus/map.php?z=5&q="+country;



			 skipAddressButton= new YAHOO.widget.Button("skip_address");
			 skipAddressButton.addListener("click",skipItem,'address' ); 
			 



			 Dom.get('newaddress').style.display='block';

		     }else{
			 



		     
			 Dom.setStyle(['newcontact','telarea','add_address','skip_address'],'display','none');
			 Dom.setStyle(['add_haddress'],'display','');
			 Dom.get('newtel').style.display='block';
			 
			 
			 var addTelButton= new YAHOO.widget.Button("add_tel");
			 addTelButton.addListener("click",addItem,'tel' );
			 
			 submitTelButton= new YAHOO.widget.Button("submit_tel");
			 submitTelButton.addListener("click",submitTel,true);
			 var skipTelButton= new YAHOO.widget.Button("skip_tel");
			 skipTelButton.addListener("click",skipItem,'tel' ); 
			 
			 var cancelTelButton= new YAHOO.widget.Button("cancel_tel");
			 cancelTelButton.addListener("click",cancelItem,'tel' ); 
			 
			 Dom.get('cancel_tel').style.display='none';
			 
			 //Dom.get('tipo_tel').selectIndex=2;
			 Dom.get('tipo_tel').options[0]=null;

					     
			 


		     
			 var submitEmailButton= new YAHOO.widget.Button("submit_email");
			 submitEmailButton.addListener("click",submitEmail,true);
			 var cancelEmailButton= new YAHOO.widget.Button("cancel_email");
			 cancelEmailButton.addListener("click",cancelItem,'email' ); 
		     
			 var submitAddressButton= new YAHOO.widget.Button("submit_address");
			 submitAddressButton.addListener("click",submitAddress,true);
			 var cancelAddressButton= new YAHOO.widget.Button("cancel_address");
			 cancelAddressButton.addListener("click",cancelItem,'address' ); 


			 var submitWwwButton= new YAHOO.widget.Button("submit_www");
			 submitWwwButton.addListener("click",submitwww,true);
			 var cancelWwwButton= new YAHOO.widget.Button("cancel_www");
			 cancelWwwButton.addListener("click",cancelItem,'www' ); 

			 addEmailButton= new YAHOO.widget.Button("add_email");
			 addEmailButton.addListener("click",addItem,'email' );
			 addWWWButton= new YAHOO.widget.Button("add_www");
			 addWWWButton.addListener("click",addItem,'www' );
			 addAdrressButton= new YAHOO.widget.Button("add_haddress");
			 addAdrressButton.addListener("click",addItem,'address' );
			 addNoteButton= new YAHOO.widget.Button("add_note");
		     }
		 },
		     failure: function(o) {alert("error")},
		     scope: this 
		     });
    }
     var submitCompany = function(){
	 var companyname=Dom.get('companyname').value;
	 if(companyname==''){
	     var msg='<?=_('Please write down the company name')?>.';
	     alert(msg);
	     return;
	 }
	     

	 
	 Dom.get('typeofcontact').style.display='none';
	 Dom.get('addtocontact').style.visibility='visible';
	 var request="ar_contacts.php?tipo=newcompany&name="+companyname;
	 YAHOO.util.Connect.asyncRequest('POST',request,{
		 success: function (o) {

		     var r =  YAHOO.lang.JSON.parse(o.responseText);
		     is_company=true;

		     
		     
		     newcontact=document.createElement('li');
		     newcontact.innerHTML=r.value;
		     newcontact.setAttribute("class", "newLi");
		     oClones.insertBefore(newcontact,Dom.get('show_address'));
		     oEweContextMenu.cfg.setProperty("trigger", oClones.childNodes);
		     
		     

		     Dom.get('tipo_tel').options[0].text='<?=_('Company Telephone')?>';
		     Dom.get('tipo_tel').options[1].text='<?=_('Contact Direct Phone')?>';
		     Dom.get('tipo_tel').options[2].text='<?=_('Contact Mobil Phone')?>';
		     Dom.get('tipo_tel').options[3].style.display='none';
		     Dom.get('tipo_tel').options[4].text='<?=_('Company Fax')?>';


		     typeofcontact.getButton(1).set("checked", false); 
		     Dom.setStyle(['newcontact'],'display','block');
		     Dom.setStyle(['newcompany','add_haddress','tipo_address','label_tipo_address'],'display','none');
		     Dom.setStyle(['add_address'],'display','');

		     //   Dom.setStyle(['newcompany','add_haddress','mapframe'],'display','none');

		     
		     var addTelButton= new YAHOO.widget.Button("add_tel");
		     addTelButton.addListener("click",addItem,'tel' );

		     submitTelButton= new YAHOO.widget.Button("submit_tel");
		     submitTelButton.addListener("click",submitTel,false);
		  
		     var skipContactButton= new YAHOO.widget.Button("skip_contact");
		     
		     skipContactButton.addListener("click",skipItem,'contact' ); 
		    

		     var cancelTelButton= new YAHOO.widget.Button("cancel_tel");
		     cancelTelButton.addListener("click",cancelItem,'tel' ); 
		     
		     Dom.get('cancel_tel').style.display='none';
		     
		     
		     var submitEmailButton= new YAHOO.widget.Button("submit_email");
		     submitEmailButton.addListener("click",submitEmail,true);
		     var cancelEmailButton= new YAHOO.widget.Button("cancel_email");
		     cancelEmailButton.addListener("click",cancelItem,'email' ); 

		     var submitAddressButton= new YAHOO.widget.Button("submit_address");
		     submitAddressButton.addListener("click",submitAddress,true);
		     var cancelAddressButton= new YAHOO.widget.Button("cancel_address");
		     cancelAddressButton.addListener("click",cancelItem,'address' ); 


		     var submitWwwButton= new YAHOO.widget.Button("submit_www");
		     submitWwwButton.addListener("click",submitwww,true);
		     var cancelWwwButton= new YAHOO.widget.Button("cancel_www");
		     cancelWwwButton.addListener("click",cancelItem,'www' ); 

		     addEmailButton= new YAHOO.widget.Button("add_email");
		     addEmailButton.addListener("click",addItem,'email' );
		     addWWWButton= new YAHOO.widget.Button("add_www");
		     addWWWButton.addListener("click",addItem,'www' );
		     addAdrressButton= new YAHOO.widget.Button("add_address");
		     addAdrressButton.addListener("click",addItem,'address' );
		     




				     
		 },
		     failure: function(o) {alert("error")},
		     scope: this 
	     });


    }

     var changetoCompany = function(){
	 Dom.get('newcontact').style.display='none';
	 Dom.get('newcompany').style.display='block';
     }
     var changetoContact = function(){

	 Dom.get('skip_contact').style.display='none';
	 Dom.get('newcontact').style.display='block';
	 Dom.get('newcompany').style.display='none';
     }
     var cancelItem = function(e,tag){
	 Dom.get('form_'+tag).reset();
	 Dom.get('new'+tag).style.display='none';

	 if(tag=='address'){
	    Dom.get('newcontact_data').style.display='block';
	    Dom.get('mapframe').style.display='none';
	    
	}




      }
     
     var skipItem = function(e,tag){


	 Dom.get('form_'+tag).reset();

	 Dom.get('new'+tag).style.display='none';


	 if(is_company){
	     if(tag=='contact'){

		 Dom.get('cancel_address').style.display='none';
		 skipAddressButton= new YAHOO.widget.Button("skip_address");
		 skipAddressButton.addListener("click",skipItem,'address' ); 


		 Dom.get('tipo_tel').options[1].style.display='none';
		 Dom.get('tipo_tel').options[2].style.display='none';
		 Dom.setStyle(['newaddress'],'display','block');
		 Dom.setStyle(['select_tipoemail','cancel_address'],'display','none');

		 
	     }
	 }else{
	     if(tag=='tel'){

		 Dom.get('cancel_email').style.display='none';
		 skipEmailButton= new YAHOO.widget.Button("skip_email");
		 skipEmailButton.addListener("click",skipItem,'email' ); 
		 Dom.get('cancel_email').style.display='none';
		 Dom.get('newemail').style.display='block';
	     }
	     
	 }


	}

	function saveit(){
	    var request="ar_contacts.php?tipo=savenew";
	    
	    YAHOO.util.Connect.asyncRequest('POST',request,{
		    success: function (o) {
			alert(o.responseText);
			closedialog();
				     
		 },
		     failure: function(o) {alert("error")},
		     scope: this 
	     });
	    
	}


     function changeCountry(){
	 var country=(this.options[this.options.selectedIndex].text);

	 Dom.get('mapframe').src="http://localhost/kaktus/map.php?z=5&q="+country;
     }
     function changePostCode(){
	 var postcode=(this.value);
	 var country_select=Dom.get('country');
	 var country=(country_select.options[country_select.options.selectedIndex].text);    
	 
	 var query=postcode+','+country;
	 Dom.get('mapframe').src="http://localhost/kaktus/map.php?z=16&q="+query;
     }
       
     


     //     var addUserButton= new YAHOO.widget.Button("add_contact");
     // YAHOO.util.Event.addListener("add_contact", "click",YAHOO.contacts.dialog1.show );
 

     var typeofcontact = new YAHOO.widget.ButtonGroup("typeofcontact");
   
     YAHOO.util.Event.addListener("contact_dialog", "click",changetoContact );
     YAHOO.util.Event.addListener("company_dialog", "click",changetoCompany );
     var cancel_newcontact = new YAHOO.widget.Button("cancel_newcontact");
     cancel_newcontact.addListener("click",closedialog);
     var save_newcontact = new YAHOO.widget.Button("save_newcontact");
     save_newcontact.addListener("click",saveit);

	 
     //YAHOO.util.Event.addListener("cancel_newcontact", "click",changetoContact );
     //YAHOO.util.Event.addListener("save_newcontact", "click",saveit );



     var SubmitContactButton= new YAHOO.widget.Button("submit_contact");
     YAHOO.util.Event.addListener("submit_contact", "click",submitContact );
     var SubmitCompanyButton= new YAHOO.widget.Button("submit_company");
     YAHOO.util.Event.addListener("submit_company", "click",submitCompany );
     

     YAHOO.util.Event.addListener("country", "change", changeCountry);
     YAHOO.util.Event.addListener("postcode", "change", changePostCode);




//         var myConfig = {
//             height: '200px',
//             width: '100%',
//             dompath: false,
//             focusAtStart: true
//         };
// 	var myEditor = new YAHOO.widget.SimpleEditor('noteeditor', myConfig);

// 	myEditor.render();




}

YAHOO.util.Event.onDOMReady(init);

var oClones;
var oEweContextMenu

   YAHOO.util.Event.onContentReady("clones", function () {

                // Maintain a reference to the "clones" <ul>

                oClones = this;


                // Clone the first ewe so that we can create more later

                var oLI = oClones.getElementsByTagName("li")[0];
                var oEweTemplate = oLI.cloneNode(true);


                // Renames an "ewe"
    
                function editEweName(p_oLI) {
		    
		    alert(p_oLI);
                    
		    var oCite = p_oLI.lastChild;
		    

                    if (oCite.nodeType != 1) {
                    
                        oCite = oCite.previousSibling;
    
                    }
                
                    var oTextNode = oCite.firstChild;
    
                    var sName = window.prompt("Enter a new name for ", 
                                oTextNode.nodeValue);
    

                    if (sName && sName.length > 0) {
                        
                        oTextNode.nodeValue = sName;
    
                    }
                
                }
                
    

                
    
                // Deletes an "ewe"
    
                function deleteEwe(p_oLI) {
    
                    var oUL = p_oLI.parentNode;
    
                    oUL.removeChild(p_oLI);
                
                }
    
    
                /*
                     Returns the <li> instance that is the parent node of the  
                     target of a "contextmenu" event.
                */
    
                function getListItemFromEventTarget(p_oNode) {
    
                    if (p_oNode.tagName.toUpperCase() == "LI") {
                    
                        return p_oNode;
    
                    }
                    else {
    

                        /*
                             If the target of the event was a child of an <li>, 
                             get the parent <li> element.
                        */
    
                        do {
        
                            if (p_oNode.tagName.toUpperCase() == "LI") {
    
                                return p_oNode;                            
                            
                            }
        
                        }
                        while ((p_oNode = p_oNode.parentNode));
                    
                    }
                
                }
                
    
                // "click" event handler for each item in the ewe context menu
                
                function onEweContextMenuClick(p_sType, p_aArgs) {
    
                    /*
                         The second item in the arguments array (p_aArgs) 
                         passed back to the "click" event handler is the 
                         MenuItem instance that was the target of the 
                         "click" event.
                    */

                    var oItem = p_aArgs[1], // The MenuItem that was clicked
                        oLI;


                    if (oItem) {

                        oLI = getListItemFromEventTarget(this.contextEventTarget);
        

                        switch (oItem.index) {
                        
                            case 0:     // Edit name
        
                                editEweName(oLI);
                            
                            break;
        
        
        
                            case 1:     // Delete
        
                                deleteEwe(oLI);
        
                            break;                    
                        
                        }
                    
                    }
                
                }


                /*
                     Array of text labels for the MenuItem instances to be
                     added to the ContextMenu instanc.
                */

                var aMenuItems = ["<?=_('Edit Name')?>", "<?=_('Delete')?>" ]; 


                /*
                     Instantiate a ContextMenu:  The first argument passed to 
                     the constructor is the id of the element to be created; the 
                     second is an object literal of configuration properties.
                */

                 oEweContextMenu = new YAHOO.widget.ContextMenu(
                                            "ewecontextmenu", 
                                            {
                                                trigger: oClones.childNodes,
                                                itemdata: aMenuItems,
                                                lazyload: true  ,
						zindex:20
                                            } 
                                        );


                // "render" event handler for the ewe context menu

                function onContextMenuRender(p_sType, p_aArgs) {
    
                    //  Add a "click" event handler to the ewe context menu
    
                    this.subscribe("click", onEweContextMenuClick);
                
                }


                // Add a "render" event handler to the ewe context menu

                oEweContextMenu.subscribe("render", onContextMenuRender);


                // Deletes an ewe from the field

                function deleteEwes() {

                    oEweContextMenu.cfg.setProperty("target", null);

                    oClones.innerHTML = "";


                    function onHide(p_sType, p_aArgs, p_oItem) {

                        p_oItem.cfg.setProperty("disabled", true);
                    
                        p_oItem.parent.unsubscribe("hide", onHide, p_oItem);
                    
                    }

                    this.parent.subscribe("hide", onHide, this);

                }


                // Creates a new ewe and appends it to the field

                function createNewEwe() {
                
                    var oLI = oEweTemplate.cloneNode(true);
                    
                    oClones.appendChild(oLI);

                    this.parent.getItem(1).cfg.setProperty("disabled", false);

                    oEweContextMenu.cfg.setProperty("trigger", oClones.childNodes);
                
                }


                // Sets the color of the grass in the field

                function setFieldColor(p_sType, p_aArgs, p_sColor) {

                    var oCheckedItem = this.parent.checkedItem;

                    if (oCheckedItem != this) {

                        YAHOO.util.Dom.setStyle("clones", "backgroundColor", p_sColor);
                        
                        this.cfg.setProperty("checked", true);


                        oCheckedItem.cfg.setProperty("checked", false);

                        this.parent.checkedItem = this;
                    
                    }

                }


                // "render" event handler for the field context menu

                function onFieldMenuRender(p_sType, p_aArgs) {

                    if (this.parent) {  // submenu

                        this.checkedItem = this.getItem(0);

                    }

                }


                /*
                     Array of object literals - each containing configuration 
                     properties for the items for the context menu.
                */

                var oFieldContextMenuItemData = [
                
                    {
                        text: "Field color", 
                        submenu: { 
                            id: "fieldcolors", 
                            itemdata: [
                                { text: "Light Green", onclick: { fn: setFieldColor, obj: "#99cc66" }, checked: true }, 
                                { text: "Medium Green", onclick: { fn: setFieldColor, obj: "#669933" } }, 
                                { text: "Dark Green", onclick: { fn: setFieldColor, obj: "#336600" } }
                            ] 
                        } 
                    },
                    { text: "Delete all", onclick: { fn: deleteEwes } },
                    { text: "New Ewe", onclick: { fn: createNewEwe } }
                
                ];


                /*
                     Instantiate a ContextMenu:  The first argument passed to 
                     the constructor is the id of the element to be created; the 
                     second is an object literal of configuration properties.
                */

    //             var oFieldContextMenu = new YAHOO.widget.ContextMenu(
//                                                 "fieldcontextmenu",
//                                                 {
//                                                     trigger: "clones",
//                                                     itemdata: oFieldContextMenuItemData,
//                                                     lazyload: true
//                                                 }
//                                             );


//                 // Add a "render" event handler to the field context menu

//                 oFieldContextMenu.subscribe("render", onFieldMenuRender);
            
            
            });